{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rjgorz/Development/code/phase-2/cc/src/components/Planeteer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction Planeteer({\n  id,\n  name,\n  fromUSA,\n  born,\n  bio,\n  quote,\n  pictureUrl,\n  twitter\n}) {\n  _s();\n\n  //set up state to track whether or not the image has been clicked\n  //to conditionally render bio vs. quote\n  const [isClicked, setIsClicked] = useState(false); //handler function to toggle clicked state\n\n  const handleClick = () => {\n    setIsClicked(isClicked => !isClicked);\n  }; //get current year to calculate age\n\n\n  const year = new Date().getFullYear();\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"cards__item\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: pictureUrl,\n        alt: name,\n        className: \"card__image\",\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__title\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card__text\",\n          children: isClicked ? quote : bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: twitter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Age: \", year - born]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), \"                             \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: fromUSA ? \"USA-based\" : \"Working overseas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), \"   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Planeteer, \"+2jvnzgqyS4sm44z1s1whgWD4Tg=\");\n\n_c = Planeteer;\nexport default Planeteer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planeteer\");","map":{"version":3,"sources":["/home/rjgorz/Development/code/phase-2/cc/src/components/Planeteer.js"],"names":["React","useState","Planeteer","id","name","fromUSA","born","bio","quote","pictureUrl","twitter","isClicked","setIsClicked","handleClick","year","Date","getFullYear"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,GAA3B;AAAgCC,EAAAA,KAAhC;AAAuCC,EAAAA,UAAvC;AAAmDC,EAAAA;AAAnD,CAAnB,EAAiF;AAAA;;AAC/E;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C,CAH+E,CAK/E;;AACA,QAAMY,WAAW,GAAG,MAAM;AACxBD,IAAAA,YAAY,CAACD,SAAS,IAAI,CAACA,SAAf,CAAZ;AACD,GAFD,CAN+E,CAU/E;;;AACA,QAAMG,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AAEA,sBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AACE,QAAA,GAAG,EAAEP,UADP;AAEE,QAAA,GAAG,EAAEL,IAFP;AAGE,QAAA,SAAS,EAAC,aAHZ;AAIE,QAAA,OAAO,EAAES;AAJX;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBAA8BT;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,oBAA2BO,SAAS,GAAGH,KAAH,GAAWD;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFF,oBAGE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAA,sBAAIG;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,gCAASI,IAAI,GAAGR,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,gDAGE;AAAA,sBAAID,OAAO,GAAG,WAAH,GAAiB;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAlCQH,S;;KAAAA,S;AAoCT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Planeteer({ id, name, fromUSA, born, bio, quote, pictureUrl, twitter }) {\n  //set up state to track whether or not the image has been clicked\n  //to conditionally render bio vs. quote\n  const [isClicked, setIsClicked] = useState(false);\n\n  //handler function to toggle clicked state\n  const handleClick = () => {\n    setIsClicked(isClicked => !isClicked);\n  }\n\n  //get current year to calculate age\n  const year = new Date().getFullYear();\n\n  return (\n    <li className=\"cards__item\">\n      <div className=\"card\">\n        <img\n          src={pictureUrl}\n          alt={name}\n          className=\"card__image\"\n          onClick={handleClick}\n        />\n        <div className=\"card__content\">\n          <div className=\"card__title\">{name}</div>\n          <p className=\"card__text\">{isClicked ? quote : bio}</p> {/*conditional to toggle bio/quote when clicked*/}\n          <div className=\"card__detail\">\n            <p>{twitter}</p>\n            <p>Age: {year - born}</p>                             {/*display age based on current year minus year born*/}\n            <p>{fromUSA ? \"USA-based\" : \"Working overseas\"}</p>   {/*conditional to display location based on fromUSA boolean*/}\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Planeteer;\n"]},"metadata":{},"sourceType":"module"}